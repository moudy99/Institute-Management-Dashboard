@using LAP.Repository
@model List<Course>
@inject IcourseRepository repo;
@{
    ViewData["Title"] = "Index";

    PaginatedList pager = new PaginatedList();

    int PageNo = 0;

    if (ViewBag.Pager != null)
    {
        pager = ViewBag.Pager;
        PageNo = pager.CurrentPage;
    }
}




    <style>
    body {
        background: linear-gradient(to right, #56ab2f, #a8e063);
   
        max-height:100vh;
        overflow:hidden;
    }

    .navbar,
    footer {
        display: none;
    }
    /* //////////////// علشان اخر صفحة في ال pagination  */


    .btn_crs {
        background-color: #fff;
        color: #56ab2f;
        border: 2px solid #56ab2f;
        transition: all 0.25s ease-in-out;
        margin: 5px;
        font-size: 1.2rem;
        font-weight: 700;
    }

        .btn_crs:hover {
            background-color: #56ab2f;
            color: #fff;
            box-shadow: -4px 9px 8px rgba(0, 0, 0, 0.1);
            transform: translateY(-2px);
        }

    .course-card {
        border-radius: 10px;
        box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2);
        transition: all 0.3s ease-in-out;
        margin-bottom: 20px;
        background: #ffffff9e;
        height: 133px;
        display: flex;
        align-items: center;
        justify-content: center;
    }

        .course-card:hover {
            box-shadow: -4px 9px 8px rgba(0, 0, 0, 0.3);
            transform: translateY(2px);
        }

    .btn-group {
        display: flex;
    }

  


    .top_btn {
        margin-bottom: 50px;
        font-size: 20px;
        font-weight: bold;
        border-bottom-left-radius: 12px;
        border-bottom-right-radius: 12px;
        margin-left: 10px;
        transition:all .3s ease-in-out;
        border-top:none;
         

    }

        .top_btn:hover {
        background:white;
        color:black;
        box-shadow: -4px 9px 8px rgba(0, 0, 0, 0.2);
    }

 

    /* Search Bar */
    .search_container{
        width: fit-content;
        float: right;
        display: flex;
        align-items: center;
        justify-content: center;
    }
    .search_container  .btn{
            background: black;
            color: white;
            font-size: 21px;
            font-weight: bold;
            transition: all .3s ease-in-out;
        }
         .search_container  .btn:hover{
                box-shadow: -4px 9px 8px rgba(0, 0, 0, 0.2);
                transform: translateY(-1px);
            }
            .search_container input{
                border-bottom-left-radius:15px !important;
            border-top-left-radius 15px !important;
            font-size:15px;
            font-weight:500;
            transition: all .5s ease-in-out;
            margin-left:10px;
        }

            .search_container input:focus {
                border: none;
                outline: none;
                box-shadow: 0 0 10px rgba(0, 0, 0, 0.2); 
                transition: box-shadow 0.5s ease;
                font-weight:bold;
                
               
            }
         

    .pagination .page-item.active .page-link {
        background-color: #56ab2f;
        border-color: #56ab2f;
        color: #fff;
        font-weight:bolder;
        font-size: 15px;
        box-shadow: -3px 4px 0px rgb(0 0 0 / 28%);
    }

    .pagination a{
        color:black;
        font-weight:500;
    }


    .pagination a:hover{
        color:black;
    }

        .pagination a:focus {
            z-index: 3;
            color: black;
            background-color: #95d27900;
            outline: 0;
            box-shadow: none;
        }

    @@media (max-width: 767px) {
        body {
            overflow: auto;
        }

        .search_container {
            display: none;
        }
        .top_btn{
            display:none;
        }

        .pagination a {
            color: black;
            font-weight: 500;
            padding: 0.275rem .55rem;
        }
    }

    .welcome {
        background: white;
        color: black;
        box-shadow: -3px 4px 0px rgba(0, 0, 0, 0.2);
        margin-bottom: 50px;
        font-size: 17px;
        font-weight: bold;
        border-bottom-left-radius: 12px;
        border-bottom-right-radius: 12px;
        margin-left: 10px;
        transition: all .3s ease-in-out;
        border-top: none;
        cursor: default !important;
        pointer-events: none;
    }
</style>


<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.7.2/font/bootstrap-icons.css">

<a href="/Home/Landing" class="btn top_btn btn-outline-light ">Home <i class="bi bi-house-fill"></i></a>
@if (User.IsInRole("Admin"))
{
<a class="btn top_btn  btn-outline-light" href="/course/add"><i class="bi bi-person-plus-fill"></i> Add New Course</a>
}
<a class="btn top_btn  btn-outline-light" asp-action="logout" asp-controller="Account"><i class="bi bi-list-columns-reverse"></i> Sign Out</a>
<a class="btn top_btn btn-outline-light" ><i class="bi bi-list-columns-reverse"></i> Back To Full List</a>

<button class="btn top_btn  btn-outline-light welcome "><i class="bi bi-emoji-smile-fill"></i> Welcome, @User.Identity.Name</button>


@* <div style="color:deeppink; font-size:25px;font-weight:bold"> C->  @ViewBag.unID</div>
<div style="color:skyblue; font-size:25px;font-weight:bold"> M-> @ViewBag.unID_2</div>
<div style="color:mediumblue; font-size:25px;font-weight:bold"> V -> @repo.ID</div> *@



<div class="search_container container">
    <form asp-action="Index" asp-controller="course" asp-route-page="@pager.CurrentPage"  method="get">
        <div class="input-group">
            <input type="text" class="form-control" placeholder="Search" name="search" value="@ViewData["search"]">
            <div class="input-group-btn">
                <button class="btn btn-default" type="submit"> <i class="bi bi-binoculars"></i></button>
            </div>
        </div>
    </form>
</div>

    <div class="container">
        @* <a target="_blank" class="btn btn_new_course rounded-2" href="/course/Add">Add New Course</a> *@
        <div class="row">
            @foreach (var course in Model)
            {
                <div class="col-lg-4 col-md-6 col-sm-12 mb-4">
                    <div class="card course-card">
                        <div class="card-body">
                            <h5 class="card-title mb-3 fw-bold">@course.Name</h5>
                            <div class="btn-group" role="group" aria-label="Card Buttons">
                                <a href="/course/details/@course.ID" class="btn btn_crs btn-course-action">View</a>
                            @if (User.IsInRole("Admin"))
                            {
                                @if (User.IsInRole("Admin") || User.IsInRole("Instructor"))
                                {
                                <a href="/course/edit/@course.ID" class="btn btn_crs btn-course-action">Edit</a>
                                    
                                }
                            <a data-course-id="@course.ID" data-course-name="@course.Name" class="btn btn_crs delete_btn btn-course-action">Delete</a>
                                
                            }
                                <input type="hidden" value="@course.ID" />
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>




        @* Pagination ==>  *@



 
   


    @if(pager.TotalPages > 1)
    {
        <nav aria-label="Page navigation example">
            <ul class="pagination justify-content-center">

                @* ///////  Previous *@
                <li class="page-item @(pager.HasPreviousPage ? "" : "disabled")">
                    <a class="page-link" asp-action="Index" asp-controller="Course" asp-route-page="@(pager.CurrentPage - 1)" aria-label="Previous" asp-route-search="@ViewData["search"]">
                        <span aria-hidden="true">Previous</span>
                    </a>
                </li>

                @for (int pg = pager.StartPage; pg <= pager.EndPage; pg++)
                {
                    <li class="page-item @(pg == pager.CurrentPage ? "active" : "")">
                        <a class="page-link" asp-action="Index" asp-controller="Course" asp-route-page="@pg" asp-route-search="@ViewData["search"]">
                            @pg
                        </a>
                    </li>
                }


                @* ////// Next => *@
                <li class="page-item @(pager.HasNextPage ? "" : "disabled")">
                    <a class="page-link" asp-action="Index" asp-controller="Course" asp-route-page="@(pager.CurrentPage + 1)" aria-label="Next" asp-route-search="@ViewData["search"]">
                        <span aria-hidden="true">Next</span>
                    </a>
                </li>



            </ul>
        </nav>
    }

    </div>


   

<script>
    const btn_delete = document.querySelectorAll(".delete_btn");

    btn_delete.forEach(btn => {
        btn.addEventListener('click', function () {
            const name = this.getAttribute('data-course-name');
            const courseId = this.getAttribute('data-course-id');
            if (confirm(`Are you sure you want to delete ${name} course ?`)) {
                this.setAttribute('href', "/course/delete/" + courseId);
            }
        });
    });
</script>